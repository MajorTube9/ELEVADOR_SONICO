; =============================================
; Elevador para EdSim51 com P2, P3 e teclado matricial
; =============================================

ORG 0000H
LJMP MAIN

ORG 0030H
MAIN:
    ; Inicialização
    MOV P1, #00H
    MOV P2, #0FFH
    MOV P3, #0FFH
    MOV P0, #0FFH    ; Inicializa teclado matricial
    MOV 30H, #00H    ; Andar atual (0=Térreo, 1-3=Andares)
    SETB P1.0         ; Inicia no térreo
    SETB P1.4         ; Porta aberta

LOOP:
    ; Verifica botões no P2
    JNB P2.0, CALL_ANDAR_0
    JNB P2.1, CALL_ANDAR_1
    JNB P2.2, CALL_ANDAR_2
    JNB P2.3, CALL_ANDAR_3
    
    ; Verifica botões no P3
    JNB P3.0, CALL_ANDAR_0
    JNB P3.1, CALL_ANDAR_1
    JNB P3.2, CALL_ANDAR_2
    JNB P3.3, CALL_ANDAR_3
    
    ; Verifica teclado matricial
    LCALL VERIFICA_TECLADO
    SJMP LOOP

; Rotinas de chamada dos andares
CALL_ANDAR_0:
    LCALL ANDAR_0
    SJMP LOOP

CALL_ANDAR_1:
    LCALL ANDAR_1
    SJMP LOOP

CALL_ANDAR_2:
    LCALL ANDAR_2
    SJMP LOOP

CALL_ANDAR_3:
    LCALL ANDAR_3
    SJMP LOOP

; ========== ROTINA DO TECLADO MATRICIAL ==========
VERIFICA_TECLADO:
    ; Verifica linha 0 (andar 0)
    CLR P0.0          ; Ativa linha 0
    JNB P0.4, TECLA_0 ; Verifica coluna 0
    SETB P0.0         ; Desativa linha 0
    
    ; Verifica linha 1 (andares 1-3)
    CLR P0.1          ; Ativa linha 1
    JNB P0.4, TECLA_1 ; Verifica coluna 0
    JNB P0.5, TECLA_2 ; Verifica coluna 1
    JNB P0.6, TECLA_3 ; Verifica coluna 2
    SETB P0.1         ; Desativa linha 1
    RET

TECLA_0:
    SETB P0.0         ; Desativa linha 0
    LCALL DEBOUNCE
    LJMP CALL_ANDAR_0

TECLA_1:
    SETB P0.1         ; Desativa linha 1
    LCALL DEBOUNCE
    LJMP CALL_ANDAR_1

TECLA_2:
    SETB P0.1         ; Desativa linha 1
    LCALL DEBOUNCE
    LJMP CALL_ANDAR_2

TECLA_3:
    SETB P0.1         ; Desativa linha 1
    LCALL DEBOUNCE
    LJMP CALL_ANDAR_3

; ========== ROTINAS DE ANDAR (SUA LÓGICA ORIGINAL) ==========
ANDAR_0:
    CALL DEBOUNCE
    MOV A, 30H
    CJNE A, #00H, MOVER_0
    RET

MOVER_0:
    LCALL FECHAR_PORTA
    MOV R1, 30H
    
MOVE_DOWN_0:
    CJNE R1, #00H, CONTINUE_DOWN_0
    SJMP CHEGOU_ANDAR_0
    
CONTINUE_DOWN_0:
    DEC R1
    LCALL MOSTRA_MOVIMENTO
    SJMP MOVE_DOWN_0

CHEGOU_ANDAR_0:
    MOV P1, #00H
    SETB P1.0
    MOV 30H, #00H
    LCALL ABRIR_PORTA
    RET

ANDAR_1:
    CALL DEBOUNCE
    MOV A, 30H
    CJNE A, #01H, MOVER_1
    RET

MOVER_1:
    LCALL FECHAR_PORTA
    MOV R1, 30H
    
    CLR C
    SUBB A, #01H
    JC SUBIR_1
    SJMP DESCER_1

SUBIR_1:
    CJNE R1, #01H, CONTINUE_UP_1
    SJMP CHEGOU_ANDAR_1
    
CONTINUE_UP_1:
    INC R1
    LCALL MOSTRA_MOVIMENTO
    SJMP SUBIR_1

DESCER_1:
    CJNE R1, #01H, CONTINUE_DOWN_1
    SJMP CHEGOU_ANDAR_1
    
CONTINUE_DOWN_1:
    DEC R1
    LCALL MOSTRA_MOVIMENTO
    SJMP DESCER_1

CHEGOU_ANDAR_1:
    MOV P1, #00H
    SETB P1.1
    MOV 30H, #01H
    LCALL ABRIR_PORTA
    RET

ANDAR_2:
    CALL DEBOUNCE
    MOV A, 30H
    CJNE A, #02H, MOVER_2
    RET

MOVER_2:
    LCALL FECHAR_PORTA
    MOV R1, 30H
    
    CLR C
    SUBB A, #02H
    JC SUBIR_2
    SJMP DESCER_2

SUBIR_2:
    CJNE R1, #02H, CONTINUE_UP_2
    SJMP CHEGOU_ANDAR_2
    
CONTINUE_UP_2:
    INC R1
    LCALL MOSTRA_MOVIMENTO
    SJMP SUBIR_2

DESCER_2:
    CJNE R1, #02H, CONTINUE_DOWN_2
    SJMP CHEGOU_ANDAR_2
    
CONTINUE_DOWN_2:
    DEC R1
    LCALL MOSTRA_MOVIMENTO
    SJMP DESCER_2

CHEGOU_ANDAR_2:
    MOV P1, #00H
    SETB P1.2
    MOV 30H, #02H
    LCALL ABRIR_PORTA
    RET

ANDAR_3:
    CALL DEBOUNCE
    MOV A, 30H
    CJNE A, #03H, MOVER_3
    RET

MOVER_3:
    LCALL FECHAR_PORTA
    MOV R1, 30H
    
SUBIR_3:
    CJNE R1, #03H, CONTINUE_UP_3
    SJMP CHEGOU_ANDAR_3
    
CONTINUE_UP_3:
    INC R1
    LCALL MOSTRA_MOVIMENTO
    SJMP SUBIR_3

CHEGOU_ANDAR_3:
    MOV P1, #00H
    SETB P1.3
    MOV 30H, #03H
    LCALL ABRIR_PORTA
    RET

; ========== ROTINAS COMPARTILHADAS ==========
FECHAR_PORTA:
    CLR P1.4
    LCALL ATRASO
    RET

ABRIR_PORTA:
    SETB P1.4
    LCALL ATRASO
    LCALL ATRASO
    RET

MOSTRA_MOVIMENTO:
    PUSH ACC
    MOV A, #00H
    MOV C, P1.4
    MOV ACC.4, C
    ORL A, R1
    MOV P1, A
    LCALL ATRASO
    POP ACC
    RET

DEBOUNCE:
    LCALL ATRASO
    RET

ATRASO:
    MOV R5, #10
ATRASO1:
    MOV R6, #10
ATRASO2:
    MOV R7, #10
ATRASO3:
    DJNZ R7, ATRASO3
    DJNZ R6, ATRASO2
    DJNZ R5, ATRASO1
    RET

END
